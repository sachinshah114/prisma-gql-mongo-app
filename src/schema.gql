# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Address {
  id: Float!
  address1: String!
  address2: String
  city: String!
  postcode: String!
  isActive: Boolean!
  isDeleted: Boolean!
  user: User!
  userId: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type User {
  id: Float!
  name: String!
  email: String!
  password: String!
  isVerified: Boolean!
  verificationCode: String!
  phone: String!
  isBlocked: Boolean!
  role: UserRole
  address: [Address!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum UserRole {
  ADMIN
  USER
}

type GetProfile {
  id: Float!
  name: String!
  email: String!
  isVerified: Boolean!
  verificationCode: String!
  phone: String!
  isBlocked: Boolean!
  role: UserRole
  address: [Address!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

type LoginResponse {
  access_token: String!
}

type ProductImages {
  id: Int!
  image: String!
  isDefault: Boolean!
  productId: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type ProductReviews {
  id: Int!
  review: String!
  rate: Float!
  productId: Float!
  createdAt: DateTime!
}

type Product {
  id: ID!
  name: String!
  description: String!
  price: Float!
  prductImages: [ProductImages!]
  ProductReviews: [ProductReviews!]
  userId: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Query {
  getProfile: GetProfile!
  getAddressList: [Address!]!
  dashboard: JSONObject!
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

type Mutation {
  login(login: LoginInput!): LoginResponse!
  createUser(createUserInput: CreateUserInputDTO!): User!
  verifyEmail(verifyEmail: VerifyEmailDTO!): String!
  changePassword(changePassword: ChangePasswordDTO!): String!
  sendForgotPasswordEmail(sendForgotPasswordEmailInput: SendForgotPasswordEmailDTO!): String!
  forgotPassword(forgotpassword: ForgotPasswordDTO!): String!
  editProfile(editProfile: EditProfileDTO!): User!
  createAddress(createAddress: CreateAddressInputDTO!): Address!
  updateAddress(updateAddress: UpdateAddressInputDTO!): Address!
  createProduct(createProduct: CreateProductDTO!): Product!
}

input LoginInput {
  email: String!
  password: String!
}

input CreateUserInputDTO {
  name: String!
  email: String!
  password: String!
  phone: String
}

input VerifyEmailDTO {
  token: String!
}

input ChangePasswordDTO {
  password: String!
  new_password: String!
  confirm_password: String!
}

input SendForgotPasswordEmailDTO {
  email: String!
}

input ForgotPasswordDTO {
  new_password: String!
  confirm_password: String!
  token: String!
}

input EditProfileDTO {
  name: String!
  phone: String
}

input CreateAddressInputDTO {
  address1: String!
  address2: String
  city: String!
  postcode: String!
}

input UpdateAddressInputDTO {
  id: Float!
  address1: String
  address2: String
  city: String
  postcode: String
  isActive: Boolean
  isDeleted: Boolean
}

input CreateProductDTO {
  name: String!
  description: String!
  price: Float!
}